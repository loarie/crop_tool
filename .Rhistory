temp <- read.csv("http://climatedataapi.worldbank.org/climateweb/rest/v1/country/cru/tas/year/SEN.csv") #C
pr <- read.csv("http://climatedataapi.worldbank.org/climateweb/rest/v1/country/cru/pr/year/SEN.csv") #mm
yield <- read.csv("/Users/scottloarie/Downloads/62b7062a-a715-4047-ab58-6841d2185375.csv")
start = min(yield$Year, na.rm=TRUE)
end = 2012 #max(yield$Year, na.rm=TRUE)
y = yield$Value[ which( yield$Year == start ) : which( yield$Year == end ) ]
x1 = temp[ which( temp[,1] == start ) : which( temp[,1] == end ), 2 ]
x2 = pr[ which( pr[,1] == start ) : which( pr[,1] == end ), 2 ]
mydata  = as.data.frame( cbind( y, x1, x2, x1^2, x2^2 ) )
colnames( mydata ) = c( "y", "x1", "x2", "x1_2", "x2_2" )
fit = lm( y ~ ., data = mydata )
beta = fit$coefficients
sigma2 = summary(fit)[6]$sigma^2
#Gibbs for regression
library( mvtnorm )
library( MCMCpack )
range(y)
y = c( 4679 )
n = length( y )
x1 = c( 30 )
x2 = c( 34 )
X = cbind( rep( 1, times = n ), x1, x2 )
p = dim( X )[2]
X
beta
b0 = beta
Vb = 4 * diag( p )
b_val = rmvnorm( 1, b0, Vb )[1,]
b0
Vb
p
dim( X )
X
X
dim(x)
dim(X)
diag( p )
Vb = 4 * diag( p )
Vb
b0
y = c( 4679 )
n = length( y )
x1 = c( 30 )
x2 = c( 34 )
X = cbind( rep( 1, times = n ), x1, x2, x1^2, x2^2 )
p = dim( X )[2]
#beta prior
b0 = beta
Vb = 4 * diag( p )
b_val = rmvnorm( 1, b0, Vb )[1,]
#sigma2 prior
s1 = 12
s2 = 1
sigma2_val = rinvgamma( 1, s1, s2 ) #s2/(s1-1.0) #mean
ngibbs = 10000
b_vals = matrix( NA, ngibbs, p )
sigma2_vals = rep( NA, times = ngibbs )
for( g in 1 : ngibbs ){
  #sample sigma2
  u1 = s1 + n / 2
  u2 = s2 + 0.5 * crossprod( y - X %*% b_val )
  sigma2_val = rinvgamma( 1, u1, u2 )
  sigma2_vals[g] = sigma2_val 
  #sample b
  v = 1 / ( sigma2_val ) * crossprod( X, y ) + solve( Vb ) %*% b0
  V_inv = 1/(sigma2_val) * crossprod(X) + solve( Vb )
  b_val = rmvnorm( 1, solve( V_inv ) %*% v, solve( V_inv ) )[1,]
  b_vals[g,] = b_val
}
b_mean = apply( b_vals, 2, mean )
sigma2_mean = mean( sigma2_vals )
b_mean
sigma2_mean
sigma2
#beta prior
b0 = beta
Vb = 4 * diag( p )
b_val = rmvnorm( 1, b0, Vb )[1,]
#sigma2 prior
s1 = 12
s2 = 1
sigma2_val = rinvgamma( 1, s1, s2 ) #s2/(s1-1.0) #mean
b_val
b0
sigma2_val
sigma2
sigma2
s1 = 2
s2 = sigma2
sigma2_val = rinvgamma( 1, s1, s2 ) #s2/(s1-1.0) #mean
sigma2_val
mean(rinvgamma( 100, s1, s2 ))
y = c( 4679 )
n = length( y )
x1 = c( 30 )
x2 = c( 34 )
X = cbind( rep( 1, times = n ), x1, x2, x1^2, x2^2 )
p = dim( X )[2]
#beta prior
b0 = beta
Vb = 4 * diag( p )
b_val = rmvnorm( 1, b0, Vb )[1,]
#sigma2 prior
s1 = 2
s2 = sigma2
sigma2_val = rinvgamma( 1, s1, s2 ) #s2/(s1-1.0) #mean
ngibbs = 10000
b_vals = matrix( NA, ngibbs, p )
sigma2_vals = rep( NA, times = ngibbs )
for( g in 1 : ngibbs ){
  #sample sigma2
  u1 = s1 + n / 2
  u2 = s2 + 0.5 * crossprod( y - X %*% b_val )
  sigma2_val = rinvgamma( 1, u1, u2 )
  sigma2_vals[g] = sigma2_val 
  #sample b
  v = 1 / ( sigma2_val ) * crossprod( X, y ) + solve( Vb ) %*% b0
  V_inv = 1/(sigma2_val) * crossprod(X) + solve( Vb )
  b_val = rmvnorm( 1, solve( V_inv ) %*% v, solve( V_inv ) )[1,]
  b_vals[g,] = b_val
}
b_mean = apply( b_vals, 2, mean )
sigma2_mean = mean( sigma2_vals )
b_mean
sigma2_mean
beta
y = rep( 4679, times=100 )
n = length( y )
x1 = rep( 30, times=100 )
x2 = rep( 34, times=100 )
X = cbind( rep( 1, times = n ), x1, x2, x1^2, x2^2 )
p = dim( X )[2]
#beta prior
b0 = beta
Vb = 4 * diag( p )
b_val = rmvnorm( 1, b0, Vb )[1,]
#sigma2 prior
s1 = 2
s2 = sigma2
sigma2_val = rinvgamma( 1, s1, s2 ) #s2/(s1-1.0) #mean
ngibbs = 10000
b_vals = matrix( NA, ngibbs, p )
sigma2_vals = rep( NA, times = ngibbs )
for( g in 1 : ngibbs ){
  #sample sigma2
  u1 = s1 + n / 2
  u2 = s2 + 0.5 * crossprod( y - X %*% b_val )
  sigma2_val = rinvgamma( 1, u1, u2 )
  sigma2_vals[g] = sigma2_val 
  #sample b
  v = 1 / ( sigma2_val ) * crossprod( X, y ) + solve( Vb ) %*% b0
  V_inv = 1/(sigma2_val) * crossprod(X) + solve( Vb )
  b_val = rmvnorm( 1, solve( V_inv ) %*% v, solve( V_inv ) )[1,]
  b_vals[g,] = b_val
}
b_mean = apply( b_vals, 2, mean )
sigma2_mean = mean( sigma2_vals )
b_mean
beta
b_vals[1,]
b_vals[,1]
plot(b_vals[,1])
y = rep( 46, times=100 )
n = length( y )
x1 = rep( 30, times=100 )
x2 = rep( 34, times=100 )
X = cbind( rep( 1, times = n ), x1, x2, x1^2, x2^2 )
p = dim( X )[2]
#beta prior
b0 = beta
Vb = 4 * diag( p )
b_val = rmvnorm( 1, b0, Vb )[1,]
#sigma2 prior
s1 = 2
s2 = sigma2
sigma2_val = rinvgamma( 1, s1, s2 ) #s2/(s1-1.0) #mean
ngibbs = 10000
b_vals = matrix( NA, ngibbs, p )
sigma2_vals = rep( NA, times = ngibbs )
for( g in 1 : ngibbs ){
  #sample sigma2
  u1 = s1 + n / 2
  u2 = s2 + 0.5 * crossprod( y - X %*% b_val )
  sigma2_val = rinvgamma( 1, u1, u2 )
  sigma2_vals[g] = sigma2_val 
  #sample b
  v = 1 / ( sigma2_val ) * crossprod( X, y ) + solve( Vb ) %*% b0
  V_inv = 1/(sigma2_val) * crossprod(X) + solve( Vb )
  b_val = rmvnorm( 1, solve( V_inv ) %*% v, solve( V_inv ) )[1,]
  b_vals[g,] = b_val
}
b_mean = apply( b_vals, 2, mean )
sigma2_mean = mean( sigma2_vals )
b_mean
beta
sigma2_mean
sigma2
t_cur = 30.0 #C
p_cur = 34.0 #mm
sum(b_mean*c(1, t_cur, p_cur, t_cur^2, p_cur^2))
y = rep( 4679, times=100 )
n = length( y )
x1 = rep( 30, times=100 )
x2 = rep( 34, times=100 )
X = cbind( rep( 1, times = n ), x1, x2, x1^2, x2^2 )
p = dim( X )[2]
#beta prior
b0 = beta
Vb = 4 * diag( p )
b_val = rmvnorm( 1, b0, Vb )[1,]
#sigma2 prior
s1 = 2
s2 = sigma2
sigma2_val = rinvgamma( 1, s1, s2 ) #s2/(s1-1.0) #mean
ngibbs = 10000
b_vals = matrix( NA, ngibbs, p )
sigma2_vals = rep( NA, times = ngibbs )
for( g in 1 : ngibbs ){
  #sample sigma2
  u1 = s1 + n / 2
  u2 = s2 + 0.5 * crossprod( y - X %*% b_val )
  sigma2_val = rinvgamma( 1, u1, u2 )
  sigma2_vals[g] = sigma2_val 
  #sample b
  v = 1 / ( sigma2_val ) * crossprod( X, y ) + solve( Vb ) %*% b0
  V_inv = 1/(sigma2_val) * crossprod(X) + solve( Vb )
  b_val = rmvnorm( 1, solve( V_inv ) %*% v, solve( V_inv ) )[1,]
  b_vals[g,] = b_val
}
b_mean = apply( b_vals, 2, mean )
sigma2_mean = mean( sigma2_vals )
t_cur = 30.0 #C
p_cur = 34.0 #mm
sum(b_mean*c(1, t_cur, p_cur, t_cur^2, p_cur^2))
beta
bmean
b_mean
sum(beta*c(1, t_cur, p_cur, t_cur^2, p_cur^2))
y = rep( 2679, times=100 )
n = length( y )
x1 = rep( 30, times=100 )
x2 = rep( 34, times=100 )
X = cbind( rep( 1, times = n ), x1, x2, x1^2, x2^2 )
p = dim( X )[2]
#beta prior
b0 = beta
Vb = 4 * diag( p )
b_val = rmvnorm( 1, b0, Vb )[1,]
#sigma2 prior
s1 = 2
s2 = sigma2
sigma2_val = rinvgamma( 1, s1, s2 ) #s2/(s1-1.0) #mean
ngibbs = 10000
b_vals = matrix( NA, ngibbs, p )
sigma2_vals = rep( NA, times = ngibbs )
for( g in 1 : ngibbs ){
  #sample sigma2
  u1 = s1 + n / 2
  u2 = s2 + 0.5 * crossprod( y - X %*% b_val )
  sigma2_val = rinvgamma( 1, u1, u2 )
  sigma2_vals[g] = sigma2_val 
  #sample b
  v = 1 / ( sigma2_val ) * crossprod( X, y ) + solve( Vb ) %*% b0
  V_inv = 1/(sigma2_val) * crossprod(X) + solve( Vb )
  b_val = rmvnorm( 1, solve( V_inv ) %*% v, solve( V_inv ) )[1,]
  b_vals[g,] = b_val
}
b_mean = apply( b_vals, 2, mean )
sigma2_mean = mean( sigma2_vals )
t_cur = 30.0 #C
p_cur = 34.0 #mm
sum(b_mean*c(1, t_cur, p_cur, t_cur^2, p_cur^2))
y = rep( 2679, times=10 )
n = length( y )
x1 = rep( 30, times=10 )
x2 = rep( 34, times=10 )
X = cbind( rep( 1, times = n ), x1, x2, x1^2, x2^2 )
p = dim( X )[2]
#beta prior
b0 = beta
Vb = 4 * diag( p )
b_val = rmvnorm( 1, b0, Vb )[1,]
#sigma2 prior
s1 = 2
s2 = sigma2
sigma2_val = rinvgamma( 1, s1, s2 ) #s2/(s1-1.0) #mean
ngibbs = 10000
b_vals = matrix( NA, ngibbs, p )
sigma2_vals = rep( NA, times = ngibbs )
for( g in 1 : ngibbs ){
  #sample sigma2
  u1 = s1 + n / 2
  u2 = s2 + 0.5 * crossprod( y - X %*% b_val )
  sigma2_val = rinvgamma( 1, u1, u2 )
  sigma2_vals[g] = sigma2_val 
  #sample b
  v = 1 / ( sigma2_val ) * crossprod( X, y ) + solve( Vb ) %*% b0
  V_inv = 1/(sigma2_val) * crossprod(X) + solve( Vb )
  b_val = rmvnorm( 1, solve( V_inv ) %*% v, solve( V_inv ) )[1,]
  b_vals[g,] = b_val
}
b_mean = apply( b_vals, 2, mean )
sigma2_mean = mean( sigma2_vals )
t_cur = 30.0 #C
p_cur = 34.0 #mm
sum(b_mean*c(1, t_cur, p_cur, t_cur^2, p_cur^2))
y = rep( 2679, times=1 )
n = length( y )
x1 = rep( 30, times=1 )
x2 = rep( 34, times=1 )
X = cbind( rep( 1, times = n ), x1, x2, x1^2, x2^2 )
p = dim( X )[2]
#beta prior
b0 = beta
Vb = 4 * diag( p )
b_val = rmvnorm( 1, b0, Vb )[1,]
#sigma2 prior
s1 = 2
s2 = sigma2
sigma2_val = rinvgamma( 1, s1, s2 ) #s2/(s1-1.0) #mean
ngibbs = 10000
b_vals = matrix( NA, ngibbs, p )
sigma2_vals = rep( NA, times = ngibbs )
for( g in 1 : ngibbs ){
  #sample sigma2
  u1 = s1 + n / 2
  u2 = s2 + 0.5 * crossprod( y - X %*% b_val )
  sigma2_val = rinvgamma( 1, u1, u2 )
  sigma2_vals[g] = sigma2_val 
  #sample b
  v = 1 / ( sigma2_val ) * crossprod( X, y ) + solve( Vb ) %*% b0
  V_inv = 1/(sigma2_val) * crossprod(X) + solve( Vb )
  b_val = rmvnorm( 1, solve( V_inv ) %*% v, solve( V_inv ) )[1,]
  b_vals[g,] = b_val
}
b_mean = apply( b_vals, 2, mean )
sigma2_mean = mean( sigma2_vals )
t_cur = 30.0 #C
p_cur = 34.0 #mm
sum(b_mean*c(1, t_cur, p_cur, t_cur^2, p_cur^2))
y = rep( 3000, times=1 )
n = length( y )
x1 = rep( 30, times=1 )
x2 = rep( 34, times=1 )
X = cbind( rep( 1, times = n ), x1, x2, x1^2, x2^2 )
p = dim( X )[2]
#beta prior
b0 = beta
Vb = 4 * diag( p )
b_val = rmvnorm( 1, b0, Vb )[1,]
#sigma2 prior
s1 = 2
s2 = sigma2
sigma2_val = rinvgamma( 1, s1, s2 ) #s2/(s1-1.0) #mean
ngibbs = 10000
b_vals = matrix( NA, ngibbs, p )
sigma2_vals = rep( NA, times = ngibbs )
for( g in 1 : ngibbs ){
  #sample sigma2
  u1 = s1 + n / 2
  u2 = s2 + 0.5 * crossprod( y - X %*% b_val )
  sigma2_val = rinvgamma( 1, u1, u2 )
  sigma2_vals[g] = sigma2_val 
  #sample b
  v = 1 / ( sigma2_val ) * crossprod( X, y ) + solve( Vb ) %*% b0
  V_inv = 1/(sigma2_val) * crossprod(X) + solve( Vb )
  b_val = rmvnorm( 1, solve( V_inv ) %*% v, solve( V_inv ) )[1,]
  b_vals[g,] = b_val
}
b_mean = apply( b_vals, 2, mean )
sigma2_mean = mean( sigma2_vals )
t_cur = 30.0 #C
p_cur = 34.0 #mm
sum(b_mean*c(1, t_cur, p_cur, t_cur^2, p_cur^2))
y = rep( 3000, times=2 )
n = length( y )
x1 = rep( 30, times=n )
x2 = rep( 34, times=n )
X = cbind( rep( 1, times = n ), x1, x2, x1^2, x2^2 )
p = dim( X )[2]
#beta prior
b0 = beta
Vb = 4 * diag( p )
b_val = rmvnorm( 1, b0, Vb )[1,]
#sigma2 prior
s1 = 2
s2 = sigma2
sigma2_val = rinvgamma( 1, s1, s2 ) #s2/(s1-1.0) #mean
ngibbs = 10000
b_vals = matrix( NA, ngibbs, p )
sigma2_vals = rep( NA, times = ngibbs )
for( g in 1 : ngibbs ){
  #sample sigma2
  u1 = s1 + n / 2
  u2 = s2 + 0.5 * crossprod( y - X %*% b_val )
  sigma2_val = rinvgamma( 1, u1, u2 )
  sigma2_vals[g] = sigma2_val 
  #sample b
  v = 1 / ( sigma2_val ) * crossprod( X, y ) + solve( Vb ) %*% b0
  V_inv = 1/(sigma2_val) * crossprod(X) + solve( Vb )
  b_val = rmvnorm( 1, solve( V_inv ) %*% v, solve( V_inv ) )[1,]
  b_vals[g,] = b_val
}
b_mean = apply( b_vals, 2, mean )
sigma2_mean = mean( sigma2_vals )
t_cur = 30.0 #C
p_cur = 34.0 #mm
sum(b_mean*c(1, t_cur, p_cur, t_cur^2, p_cur^2))
rmvnorm( 1, b0, Vb )[1,]
rmvnorm( 1000, b0, Vb )
plot(rmvnorm( 1000, b0, Vb )[,1])
b0
yield
temp <- read.csv("http://climatedataapi.worldbank.org/climateweb/rest/v1/country/cru/tas/year/SEN.csv") #C
pr <- read.csv("http://climatedataapi.worldbank.org/climateweb/rest/v1/country/cru/pr/year/SEN.csv") #mm
yield <- read.csv("/Users/scottloarie/Downloads/62b7062a-a715-4047-ab58-6841d2185375.csv")
start = min(yield$Year, na.rm=TRUE)
end = 2012 #max(yield$Year, na.rm=TRUE)
y = yield$Value[ which( yield$Year == start ) : which( yield$Year == end ) ] / 10 #kg/ha
x1 = temp[ which( temp[,1] == start ) : which( temp[,1] == end ), 2 ]
x2 = pr[ which( pr[,1] == start ) : which( pr[,1] == end ), 2 ]
y
mydata  = as.data.frame( cbind( y, x1, x2, x1^2, x2^2 ) )
colnames( mydata ) = c( "y", "x1", "x2", "x1_2", "x2_2" )
fit = lm( y ~ ., data = mydata )
beta = fit$coefficients
sigma2 = summary(fit)[6]$sigma^2
#Gibbs for regression
library( mvtnorm )
library( MCMCpack )
y = rep( 300, times=2 )
n = length( y )
x1 = rep( 30, times=n )
x2 = rep( 34, times=n )
X = cbind( rep( 1, times = n ), x1, x2, x1^2, x2^2 )
p = dim( X )[2]
#beta prior
b0 = beta
Vb = 1000 * diag( p )
b_val = rmvnorm( 1, b0, Vb )[1,]
#sigma2 prior
s1 = 2
s2 = sigma2
sigma2_val = rinvgamma( 1, s1, s2 ) #s2/(s1-1.0) #mean
ngibbs = 10000
b_vals = matrix( NA, ngibbs, p )
sigma2_vals = rep( NA, times = ngibbs )
for( g in 1 : ngibbs ){
  #sample sigma2
  u1 = s1 + n / 2
  u2 = s2 + 0.5 * crossprod( y - X %*% b_val )
  sigma2_val = rinvgamma( 1, u1, u2 )
  sigma2_vals[g] = sigma2_val 
  #sample b
  v = 1 / ( sigma2_val ) * crossprod( X, y ) + solve( Vb ) %*% b0
  V_inv = 1/(sigma2_val) * crossprod(X) + solve( Vb )
  b_val = rmvnorm( 1, solve( V_inv ) %*% v, solve( V_inv ) )[1,]
  b_vals[g,] = b_val
}
b_mean = apply( b_vals, 2, mean )
sigma2_mean = mean( sigma2_vals )
t_cur = 30.0 #C
p_cur = 34.0 #mm
sum(b_mean*c(1, t_cur, p_cur, t_cur^2, p_cur^2))
sum(b_mean*c(1, t_cur, p_cur, t_cur^2, p_cur^2))
sum(beta*c(1, t_cur, p_cur, t_cur^2, p_cur^2))
yield <- read.csv("/Users/scottloarie/Downloads/efb7c99d-adbc-4b16-8fee-4a40036f5377.csv")
yield[1,]
yield[which(yield$ItemName == "Millet"),]$ItemName
yield[which(yield$ItemName == "Millet"),]$Value
yield <- read.csv("/Users/scottloarie/Downloads/62b7062a-a715-4047-ab58-6841d2185375.csv")
yield$Value
yield <- yield[which(yield$ItemName == "Millet"),]$Value
yield
yield <- yield[which(yield$ItemName == "Maize"),]$Value
yield$ItemName
yield <- read.csv("/Users/scottloarie/Downloads/efb7c99d-adbc-4b16-8fee-4a40036f5377.csv")
yield$ItemName
unique(yield$ItemName)
yield <- yield[which(yield$ItemName == "Maize"),]$Value
yield
yield <- read.csv("/Users/scottloarie/Downloads/efb7c99d-adbc-4b16-8fee-4a40036f5377.csv")
yield <- yield[which(yield$ItemName == "Maize"),]
start = min(yield$Year, na.rm=TRUE)
end = 2012 #max(yield$Year, na.rm=TRUE)
y = yield$Value[ which( yield$Year == start ) : which( yield$Year == end ) ] / 10 #kg/ha
y
plot(y)
temp <- read.csv("http://climatedataapi.worldbank.org/climateweb/rest/v1/country/cru/tas/year/SEN.csv") #C
pr <- read.csv("http://climatedataapi.worldbank.org/climateweb/rest/v1/country/cru/pr/year/SEN.csv") #mm
#yield <- read.csv("/Users/scottloarie/Downloads/62b7062a-a715-4047-ab58-6841d2185375.csv")
yield <- read.csv("/Users/scottloarie/Downloads/efb7c99d-adbc-4b16-8fee-4a40036f5377.csv")
yield <- yield[which(yield$ItemName == "Maize"),]
start = min(yield$Year, na.rm=TRUE)
end = 2012 #max(yield$Year, na.rm=TRUE)
y = yield$Value[ which( yield$Year == start ) : which( yield$Year == end ) ] / 10 #kg/ha
x1 = temp[ which( temp[,1] == start ) : which( temp[,1] == end ), 2 ]
x2 = pr[ which( pr[,1] == start ) : which( pr[,1] == end ), 2 ]
mydata  = as.data.frame( cbind( y, x1, x2, x1^2, x2^2 ) )
colnames( mydata ) = c( "y", "x1", "x2", "x1_2", "x2_2" )
fit = lm( y ~ ., data = mydata )
beta = fit$coefficients
sigma2 = summary(fit)[6]$sigma^2
beta
t_cur = 30.0 #C
p_cur = 34.0 #mm
sum(beta*c(1, t_cur, p_cur, t_cur^2, p_cur^2))
beta
sigma
sigma2
exit
quit()
